
services:
  kafka:
    image: apache/kafka:3.8.1
    container_name: kafka-topicos
    ports:
      - "9094:9094"
    environment:
      KAFKA_NODE_ID: "1"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      # ðŸ‘‡ Necesario en KRaft cuando el nodo tiene rol de controller
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      # Listeners
      KAFKA_LISTENERS: "INTERNAL://:9092,EXTERNAL://:9094,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"

       #Autocreacion y limitacion de memoria

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_NUM_PARTITIONS: "1"
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"

     
      # (Opcional) Fijar un Cluster ID estable
      # KAFKA_CLUSTER_ID: "5L6g3nShT-eMCtK--X86sw"

    volumes:
      - C:/Users/deria/Desktop/docker-voumenes/kafka:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "bash", "-lc", "bash -c '</dev/tcp/127.0.0.1/9092'"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 40s
    restart: unless-stopped
    networks:
      - app_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

    networks:
      - app_network


  mysql:
    image: mysql:8.0
    container_name: mysql_status_operation
    ports:
      - "3307:3306"  # opcional: solo para acceso desde el host
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: status_operation
      MYSQL_USER: derian
      MYSQL_PASSWORD: derian
      TZ: UTC
    volumes:
      - C:/Users/deria/Desktop/docker-voumenes/orqeustador:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 15
    command: [
      "--default-authentication-plugin=mysql_native_password",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_0900_ai_ci"
    ]
    networks:
      - microservicios-proceso-comrpas_app_network

  mysql-inventarios:
      image: mysql:8.0
      container_name: mysql_inventarios
      ports:
        - "3308:3306"  # opcional: solo para acceso desde el host
      environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: inventory
        MYSQL_USER: derian
        MYSQL_PASSWORD: derian
        TZ: UTC
      volumes:
        - C:/Users/deria/Desktop/docker-voumenes/inventarios:/var/lib/mysql
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-proot"]
        interval: 5s
        timeout: 3s
        retries: 15
      command: [
        "--default-authentication-plugin=mysql_native_password",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_0900_ai_ci"
      ]
      networks:
        - microservicios-proceso-comrpas_app_network

  mysql-ordenes:
      image: mysql:8.0
      container_name: mysql_ordenes
      ports:
        - "3309:3306"  # opcional: solo para acceso desde el host
      environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: ordenes
        MYSQL_USER: derian
        MYSQL_PASSWORD: derian
        TZ: UTC
      volumes:
        - C:/Users/deria/Desktop/docker-voumenes/ordenes:/var/lib/mysql
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-proot"]
        interval: 5s
        timeout: 3s
        retries: 15
      command: [
        "--default-authentication-plugin=mysql_native_password",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_0900_ai_ci"
      ]
      networks:
        - microservicios-proceso-comrpas_app_network


  orquestador:
    image: orquestador:0.0.4
    mem_limit: 512m         
    cpus: 0.5               
    environment:
      SPRING_PROFILES_ACTIVE: prod
      # IMPORTANTE: usar DNS del servicio mysql y el puerto interno 3306
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/status_operation?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: derian
      SPRING_DATASOURCE_PASSWORD: derian
      SERVER_PORT: 8080
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      
    ports:
      - "8085:8080"
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
      
    networks:
      - microservicios-proceso-comrpas_app_network
      - app_network  
  inventarios:
    image: inventarios:0.0.2
    mem_limit: 512m         
    cpus: 0.5               
    environment:
      SPRING_PROFILES_ACTIVE: prod
      # IMPORTANTE: usar DNS del servicio mysql y el puerto interno 3306
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_inventarios:3306/inventory?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: derian
      SPRING_DATASOURCE_PASSWORD: derian
      SERVER_PORT: 8080
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      
    ports:
      - "8086:8080"
    restart: unless-stopped
    depends_on:
      mysql-inventarios:
        condition: service_healthy
      kafka:
        condition: service_started
      
    networks:
      - microservicios-proceso-comrpas_app_network
      - app_network  




volumes:
  mysql_data:
  kafka_data:

networks:
  app_network:
      driver: bridge
  microservicios-proceso-comrpas_app_network:
    external: true
    name: microservicios-proceso-comrpas_app_network


